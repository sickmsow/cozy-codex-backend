name: Deploy to Docker Swarm

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main
  workflow_dispatch:
    inputs:
      book_service_tag:
        description: 'Tag for the book-service image'
        required: true
        default: b851abeee82a48d2502eaa1e51aa95e2b5db6e25
      # You can add inputs for other service tags if needed

jobs:
  deploy:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout code
      uses: actions/checkout@v3

    - name: Setup SSH
      uses: webfactory/ssh-agent@v0.5.4
      with:
        ssh-private-key: ${{ secrets.SSH_PRIVATE_KEY }}

    - name: Add SSH known hosts
      run: |
        mkdir -p ~/.ssh
        ssh-keyscan -H ${{ secrets.SWARM_MANAGER_IP1 }} >> ~/.ssh/known_hosts
        ssh-keyscan -H ${{ secrets.SWARM_MANAGER_IP2 }} >> ~/.ssh/known_hosts
        chmod 600 ~/.ssh/known_hosts

    - name: Generate docker-compose.yml with specified tags
      run: |
        cat > docker-compose.yml << EOF
        version: '3.8'

        services:
          book-service:
            image: 023704516495.dkr.ecr.us-east-1.amazonaws.com/book-service:${{ github.event.inputs.book_service_tag }}
            deploy:
              replicas: 2
            ports:
              - "8080:8080"
            # Add any other necessary configurations for book-service
        EOF

        cat docker-compose.yml

    - name: Deploy stack to Docker Swarm manager
      env:
        SWARM_MANAGER_IP1: ${{ secrets.SWARM_MANAGER_IP1 }}
      run: |
        # Copy the docker-compose.yml to the primary manager
        scp docker-compose.yml ubuntu@$SWARM_MANAGER_IP1:~/docker-compose.yml

        # Deploy the stack from the primary manager
        ssh ubuntu@$SWARM_MANAGER_IP1 "docker stack deploy -c ~/docker-compose.yml my-microservices-stack"

        echo "Deployment completed successfully"