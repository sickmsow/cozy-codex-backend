name: Deploy to Docker Swarm with Environment File

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main
  workflow_dispatch:
    inputs:
      book_service_tag:
        description: 'Tag for the book-service image'
        required: true
        default: b851abeee82a48d2502eaa1e51aa95e2b5db6e25

jobs:
  deploy:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout code
      uses: actions/checkout@v3

    - name: Configure AWS credentials
      uses: aws-actions/configure-aws-credentials@v1
      with:
        aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
        aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        aws-region: us-east-1

    - name: Login to Amazon ECR
      id: login-ecr
      uses: aws-actions/amazon-ecr-login@v1

    - name: Setup SSH
      uses: webfactory/ssh-agent@v0.5.4
      with:
        ssh-private-key: ${{ secrets.SSH_PRIVATE_KEY }}

    - name: Add SSH known hosts
      run: |
        mkdir -p ~/.ssh
        ssh-keyscan -H ${{ secrets.SWARM_MANAGER_IP1 }} >> ~/.ssh/known_hosts
        ssh-keyscan -H ${{ secrets.SWARM_MANAGER_IP2 }} >> ~/.ssh/known_hosts
        chmod 600 ~/.ssh/known_hosts

    - name: Configure ECR login on Swarm managers
      env:
        SWARM_MANAGER_IP1: ${{ secrets.SWARM_MANAGER_IP1 }}
        SWARM_MANAGER_IP2: ${{ secrets.SWARM_MANAGER_IP2 }}
      run: |
        aws ecr get-login-password --region us-east-1 | ssh ubuntu@$SWARM_MANAGER_IP1 "docker login --username AWS --password-stdin 023704516495.dkr.ecr.us-east-1.amazonaws.com"
        aws ecr get-login-password --region us-east-1 | ssh ubuntu@$SWARM_MANAGER_IP2 "docker login --username AWS --password-stdin 023704516495.dkr.ecr.us-east-1.amazonaws.com"

    - name: Create environment file on Swarm manager
      env:
        SWARM_MANAGER_IP1: ${{ secrets.SWARM_MANAGER_IP1 }}
        ENV_FILE_CONTENTS: ${{ secrets.ENV_FILE_CONTENTS }}
      run: |
        ssh ubuntu@$SWARM_MANAGER_IP1 "echo '$ENV_FILE_CONTENTS' > /home/ubuntu/.env"
        echo "Environment file created on Swarm manager"

    - name: Generate docker-compose.yml with specified tags
      run: |
        cat > docker-compose.yml << EOF
        version: '3.8'

        services:
          book-service:
            image: 023704516495.dkr.ecr.us-east-1.amazonaws.com/book-service:${{ github.event.inputs.book_service_tag }}
            deploy:
              replicas: 2
              update_config:
                parallelism: 1
                delay: 10s
              restart_policy:
                condition: on-failure
            ports:
              - "8080:8080"
            env_file:
              - .env
        EOF

        cat docker-compose.yml

    - name: Deploy stack to Docker Swarm manager
      env:
        SWARM_MANAGER_IP1: ${{ secrets.SWARM_MANAGER_IP1 }}
      run: |
        scp docker-compose.yml ubuntu@$SWARM_MANAGER_IP1:~/docker-compose.yml
        ssh ubuntu@$SWARM_MANAGER_IP1 "docker stack deploy --compose-file ~/docker-compose.yml --env-file /home/ubuntu/.env my-microservices-stack"
        ssh ubuntu@$SWARM_MANAGER_IP1 "docker service ls"
        echo "Deployment completed successfully"
