name: Deploy to Docker Swarm

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  deploy:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout code
      uses: actions/checkout@v3
    
    - name: Setup SSH
      uses: webfactory/ssh-agent@v0.5.4
      with:
        ssh-private-key: ${{ secrets.SSH_PRIVATE_KEY }}
    
    - name: Add SSH known hosts
      run: |
        mkdir -p ~/.ssh
        ssh-keyscan -H ${{ secrets.SWARM_MANAGER_IP1 }} >> ~/.ssh/known_hosts
        ssh-keyscan -H ${{ secrets.SWARM_MANAGER_IP2 }} >> ~/.ssh/known_hosts
        chmod 600 ~/.ssh/known_hosts
    
    - name: Generate docker-compose.yml with specified tags
      run: |
        cat > docker-compose.yml << 'EOF'
        version: '3.8'

        services:
          book-service:
            image: ${{ github.event.inputs.ecr_registry }}/book-service:${{ github.event.inputs.book_service_tag }}
            ports:
              - "8000:8000"
            deploy:
              replicas: 2
              restart_policy:
                condition: on-failure
            networks:
              - my-network

          library-service:
            image: ${{ github.event.inputs.ecr_registry }}/library-service:${{ github.event.inputs.library_service_tag }}
            ports:
              - "7000:7000"
            deploy:
              replicas: 2
              restart_policy:
                condition: on-failure
            networks:
              - my-network

        networks:
          my-network:
            driver: overlay
        EOF
        
        cat docker-compose.yml
    
    - name: Deploy stack to Docker Swarm manager
      env:
        SWARM_MANAGER_IP1: ${{ secrets.SWARM_MANAGER_IP1 }}
      run: |
        # Copy the docker-compose.yml to the primary manager
        scp docker-compose.yml ubuntu@$SWARM_MANAGER_IP1:~/docker-compose.yml
        
        # Deploy the stack from